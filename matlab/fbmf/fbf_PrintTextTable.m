function [] = fbf_PrintTextTable( data, output, fields )
%FBF_PRINTTEXTTABLE FogBenchmarkFramework LatexTable
%   prints the data generated by fbf_GetData();

if exist('output','var')==0
	output=1;
end

if exist('fields','var')==0
	fields=["memAvg";"maxMem";'cpuAvg';'maxCpu'; ...
            'outAvg';'inAvg';'preCurrentAvg';...
            'runCurrentAvg';'energyAvg';...
            'mAmpsSAvg';'mAmpsHAvg';'time';'timeStr'];
end

if isa(data, 'struct')==1
	data=[data];
end

maxC = size(data,2);
maxD = size(data,1);

begin='\begin{tabular}{ | c';
title{maxD}=[];

memAvg='MemAvg(KB)';
maxMem='MemMax(KB)';
cpuAvg='CpuAvg(\%)';
maxCpu='CpuMax(\%)';
outAvg='Out(KB)';
inAvg='In(KB)';
preCurrentAvg='Pre:(mA)';
runCurrentAvg='Run:(mA)';
energyAvg='Energy(Jouls)';
mAmpsSAvg='Energy(mAs)';
mAmpsHAvg='Energy(mAh)';
time='Time(ms)';
timeStr='Time';

names = struct('memAvg', memAvg,'maxMem',maxMem,'cpuAvg',cpuAvg,'maxCpu',maxCpu, ...
            'outAvg',outAvg,'inAvg',inAvg,'preCurrentAvg',preCurrentAvg,...
            'runCurrentAvg',runCurrentAvg,'energyAvg',energyAvg,...
            'mAmpsSAvg',mAmpsSAvg,'mAmpsHAvg',mAmpsHAvg,'time',time,'timeStr',timeStr); 
defformat="%s& %f";
formats = struct('memAvg', defformat,'maxMem',defformat,'cpuAvg',defformat,'maxCpu',defformat, ...
            'outAvg',defformat,'inAvg',defformat,'preCurrentAvg',defformat,...
            'runCurrentAvg',defformat,'energyAvg',defformat,...
            'mAmpsSAvg',defformat,'mAmpsHAvg',defformat,'time',"%s& %i",'timeStr',"%s& %s"); 

			
fs=size(fields,1);

dataStr{fs,maxD}=[];
			
for i = 1 : maxC
    begin=sprintf("%s | c",begin);
	for j = 1: maxD
		cData = data(j,i);
		title{j}=sprintf("%s&%s-%s-%s",title{j},cData.platform, cData.lang, cData.protocol); 
    
		for k = 1: fs
			str1=dataStr{k,j};
			value=getfield(cData,strtrim(fields(k,:)));
			format = getfield(formats,strtrim(fields(k,:)));
			str2=sprintf(format,str1,value);
			dataStr{k,j}=str2;
		end
	end
	
end

fprintf(output,"%s | } \n \\hline ",begin);

for i = 1 : maxD
	fprintf(output,"\n  %s \\\\",title{i});
end
fprintf(output," \\hline \n");

for i = 1 : fs
	name = getfield(names,strtrim(fields(i,:)));
	fprintf(output,"%s %s \\\\ ",name ,dataStr{i,1});
	for j = 2 : maxD
		fprintf(output,"\n %s \\\\ ",dataStr{i,j});
	end
	fprintf(output," \\hline \n");
	
end

fprintf(output,"\\end{tabular}\n");
end

